(function($) {
  "use strict"; // Start of use strict

  var tracks = [
    {
      id: "cybers",
      title: "Infosec",
      body:
        '<h3 id="1keylogger">1. Keylogger</h3><ul><li><strong>Suggested Audience:</strong> First years and above</li><li><strong>Description:</strong> A small program which will secretly log keyboard usage, having these features (but not limited to)-</li><ol><li>Logs keyboard usage in a target computer.</li><li> Program runs in the background. </li><li>Records combination of keys used.</li></ol></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of Python/C++ and its libraries</li></p><p></ul></p><p></li></ul></p>\
         <h3 id="2decrypter">2. Decrypter</h3><ul><li><strong>Suggested Audience:</strong> First years and above</li><li><strong>Description:</strong> A program to decode various types of encryption, having these features (but not limited to)-</li><ol><li>Decodes Caesar cipher.</li><li> Decodes Vignere cipher. </li><li>Decodes various RSA encryption.</li></ol></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of Python/C++ and its libraries</li></p><p></ul></p><p></li></ul></p>',
      img: "img/tracks-infosec.png"
    },
    {
      id: "iot",
      title: "Web Development",
      body:
        '<h3 id="1newsroom">1. Newsroom Website</h3><ul><li><strong>Suggested Audience:</strong> First years </li><li><strong>Description:</strong> A newsroom website to get updates regarding the activities and events going on in clubs, having these features (but not limited to)-</li></ul><ol><li>A sign in-signup landing page with student and admin section made separately i.e. two different forms,  one for student and one for admin.</li><li> A subscription system for students to select whatever club they are interested in so that they will only receive news from those clubs. </li><li>The page appearing after signing in will have a profile section where students can change his info, can update his subscriptions, etc. The rest of the page will have posts and news of the subscribed clubs taken from facebook.</li></ol><ul><li><p><strong>Goals:</strong> </p><ul><li>Build a basic frontend layout of the website using HTML, CSS (or bootstrap).</li><li>Integrate the website with Firebase in order to build sign-in and sign-up system (basically using firebase authentication)  <b>OR</b>  Use cookies or local storage to create a sign-in sign-up system </li><li>After successful sign-in, redirect the student to the news page, where news (posts and updates from facebook) will be displayed. The page should also have a profile section in which the student can update his details and change his subscriptions.</li><li>The posts and updates from facebook can be shown using iframes or social plugins. And the iframes should be separated according to different clubs.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of HTML, CSS and JavaScript</li></p><p><li> Basic knowledge of firebase, how to use its features, etc.<b>(firebase is not necessary, you can use alternatives like local storage or cookies)</b></li></p><p><li>Knowledge of bootstrap (not necessary, but would be an advantage)</li></p></ul><p></p></li></p><p><li><p><strong>Resources:</strong></p></p><p><ul><li>Firebase Database can be used. It persists data without having to write backend code (<a href="https://firebase.google.com/docs/database/web/start">docs</a>, <a href="https://www.tutorialspoint.com/firebase/">tutorial</a>).</li><li>Bootstrap may be used to make the website responsive (Optional). View <a href="https://getbootstrap.com/docs/4.3/getting-started/introduction/">documentation</a> </li></ul></p><p></li></ul></p>\
        <h3 id="2quizzing">2. Quizzing Website</h3><ul><li><strong>Suggested Audience:</strong> First years.</li><li><strong>Description:</strong> A Quizzing website to conduct quizzes with the follwing features (but not limited to) -</li></ul><ol><li>The home page should be a login page. There would be 2 types of users - Students and Admins. An array of objects can be used in beginning for dummy data ( and if time permits, create a register as a student option too, using PHP/MySQL or firebase to keep the data dynamic ). The user, when signs in, should be redirected to his respective page. The information of logged user should be stored in LocalStorage, until he logs out. If he opens the link of any other page without signing in appropriately, he should be redirected back to the login page.</li><li>Admins should be given permissions to add questions on various topics and assign a difficulty level (Easy, Medium, Hard) to that question. ( Adding questions to a dynamic database should be done later, in phase II . Before that, consider making just a form with proper validation and creating dummy data of questions using array of objects ) </li><li>When Students visit the website, they would be shown the various topics of quizzes, clicking on any of them would show them 4 options - Easy, Medium, Hard. </li><li>There should be a Test Mode, in which only a fixed number of questions are asked and with same amount of difficulty level always, but randomly. (For eg. Total 7 questions = 4 Easy + 2 Medium + 1 Hard will be asked always, but the questions may be different everytime) and along with a time limit ( say 6 minutes). The timer should be displayed on the screen.</li><li>The user interface should be responsive (should work flexibly on mobile phones, tablets, PCs, etc.)</li></ol><ul><li><p><strong>Goals:</strong> </p><ul><li>Phase 1: Build the frontend UI and logic for the application.</li><li>Phase 2: Implementing the test mode and making the data of users and questions dynamic.</li></ul></li><li><p><strong>Requirements:</strong> </p><ul><li>Basic knowledge of HTML, CSS and JavaScript</li><li>Basic knowledge of firebase or PHP-MySQL or any other server-side language / database (not necessary)</li><li>Knowledge of bootstrap (not necessary, but would be an advantage)</li></ul></li><li><p><strong>Resources:</strong></p><p><ul><li>Firebase Database can be used. It persists data without having to write backend code (<a href="https://firebase.google.com/docs/database/web/start">docs</a>, <a href="https://www.tutorialspoint.com/firebase/">tutorial</a>). Alternatively, any of PHP-MySQL or Node.js can be used in place of it.</li><li>Bootstrap may be used to make the website responsive (Optional). View <a href="https://getbootstrap.com/docs/4.3/getting-started/introduction/">documentation</a> </li></ul><p></p></li></ul></p>\
        <h3 id="3os">3. OS Interface</h3><ul><li><strong>Suggested Audience:</strong> First years </li><li><strong>Description:</strong> Hack starts with an aim is to build an OS interface using HTML, CSS, JS, etc.(if any additional technology to be used please mention in your proposal). It should have following features (but not limited to): </li></ul><ol><li>Build a user interface similar to an OS and adding basic functionalities like buttons to navigate through different interfaces (Windows, Ubuntu or any other Linux).</li><li>Further adding functionality to the project, by linking to your own computer file manager to access your computer files through your browser in a similar UI.</li><li>Adding login and signup either using firebase or write your own API(more preference, not a complex one just a basic API to put and get).</li><li>Basic online file system. Going ahead of our local machine a document management system, in which files are saved in some online server(can use APIs).</li><li>Adding more functionalities like camera control, microphone control, search options, etc.</li></ol><ul><li><p><strong>Goals:</strong> </p><ul><li>Phase I : Completion up to 2nd feature and start to work on further technologies like other API linking, Improving UI(adding functionality brings complexity) and committing code(suggested collaborative platform -- GitHub) to coordinate for further milestones.</li><li>Complete up to 4th feature is sufficient but 5th for extra preferences.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of HTML, CSS and JavaScript</li></p></ul><p></p></li></p><p></ul></p><p></li></ul></p>\
        <h3 id="4mlweb">4. Image Classification for the Web</h3><ul><li><strong>Suggested Audience:</strong> First years.</li><li><strong>Description:</strong>The goal of this project is to the students started with integrating machine-learning with their websites using pre-build tools and libraries with the follwing features (but not limited to) -</li></ul><ol><li>Build a basic image uploader using HTML,CSS and Javascript</li><li>Learn about ml5js and Tensorflow Js which are libraries written in javascript to build lightweight machine learning applications for the web</li><li>Integrate the ml5js library and build a basic image classifier for their image uploader.</li></ol><ul><li><p><strong>Goals:</strong> </p><ul><li>Phase 1: Build the form with HTML, CSS ,Bootstrap and handling submit and image uploading with javascript. </li><li>Phase 2: Learn the basics of machine learning and ml5js . </li><li>Integrate the image classifier to the pre-build image uploader </li></ul></li><li><p><strong>Requirements:</strong> </p><ul><li>Basic knowledge of HTML, CSS and JavaScript</li></ul></li><li><p><strong>Resources:</strong></p><p><ul><li>View <a href="https://ml5js.org/getting-started/hello-ml5/2">documentation</a> of ml5.js </li></ul><p></p></li></ul></p>\
         <h3 id="5blogging">5. Blogging Website</h3><ul><li><strong>Suggested Audience:</strong> First years.</li><li><strong>Description:</strong>A Blogging Website for college students.</li></ul><ul><li><p><strong>Goals:</strong> </p><ul><li>Creating a Login/Sign Up page.</li><li>Creating a Homepage where you can see featured blogs, recommendations using past reads(optional), blogs recommendations based on topics of interests, etc.</li><li>Creating a Blog reading page with autoscroll option</li><li>A blog writing page with options for putting in images, gifs, etc. and asking for featured image and title for the blog along with tags.</li><li>(optional). Stats page for the blog poster for seeing the number of views on his/er blogs.</li></ul></li><li><p><strong>Requirements:</strong> </p><ul><li> Basic HTML/CSS for creating views.</li><li>Any Backend side framework would work(like Django/Python, JS, etc.)</li></ul></li><li><p><strong>Resources:</strong></p><p><ul><li>More than enough, is already <a href="https://github.com/Cyber-Labs/Cyber-Labs-Get-Started/blob/master/web-development.md">here</a> </li></ul><p></p></li></ul></p>',
      img: "img/tracks-webd.png"
    },
    {
      id: "fintech",
      title: "App Development",
      body:
        '<h3 id="1todoapp">1. To Do App</h3><ul><li><p><strong>Suggested Audience:</strong> First years</p></li><li><p><strong>Description:</strong> To Do App is an android app to solve the problem of student who easily forget their goals. You will design an app that will have following features -</p></li><ol><li>SQL support database to store the pending task with options to edit, delete and add a task.</li><li>Recycler View to show all the tasks in the activity.</li><li>Local notification system which will show notification on the time suggested by user while adding task.</li><li> An attractive UI for better user experience.</li><li>Firebase authentication system to create user\'s profile.</li><li>Additional features you would like to add and improve in app.</li></ol></li><li><p><strong>Goals:</strong> </p><p><ul><li>Build the To Do App up to completion/adequate progress</li></ul></p><li><p><strong>Requirements:</strong> </p><p><ul><li>Knowledge of Java, XML and Android basics.</li></p><p><li>SQLite database</li></p><p><li>Recycler View</li></p><p><li>Firebase</li></p></ul><p></p></li></ul></p> \
        <h3 id="2newsapp">2. News App</h3><ul><li><p><strong>Suggested Audience:</strong> First years</p></li><li><p><strong>Description:</strong> News App is an android app to get you latest news all around the wold under different categories. You will design an app that will have following features -</p></li><ol><li>Retrofit networking to fetch news from the api\'s.</li><li>Hetero Recycler View to show all the news under different categories in the home screen.</li><li>Pass intents to move from one activity to other and create web view to display full news.</li><li> An attractive UI for better user experience.</li><li>Firebase authentication system to create user\'s profile.</li><li>Additional features you would like to add and improve in app.</li></ol></li><li><p><strong>Goals:</strong> </p><p><ul><li>Build the News App up to completion/adequate progress</li></ul></p><li><p><strong>Requirements:</strong> </p><p><ul><li>Knowledge of Java, XML and Android basics.</li></p><p><li>Retrofit</li></p><p><li>Recycler View</li></p><p><li>Firebase</li></p></ul><p></p></li></ul></p>\
        <h3 id="3budgetapp">3. Budget Manager</h3><ul><li><p><strong>Suggested Audience:</strong> First years</p></li><li><p><strong>Description:</strong> Budget App is an android app to maintain personal budget i.e. Accounting. You will design an app that will have following features -</p></li><ol><li>User will be able to set a particular target spending for next given number weeks provided by the user and note down their daily spending to maintain that target. Daily entry to the app should classify spending as Domestic, Stationary/books, food etc.</li><li>The app will show the amount and percentage spent under each category.</li><li>SQL/Room to be used for data storage.</li><li> Attractive UI to properly showcase statistical data from past entries and to take entries. </li><li>Recycler View to show the list of entries.</li><li> Additional features/improvements can be added as per requirement.</li></ol></li><li><p><strong>Goals:</strong> </p><p><ul><li>Build the Budget app up to completion/adequate progress</li></ul></p><li><p><strong>Requirements:</strong> </p><p><ul><li>Knowledge of Java and XML.</li></p><p><li>Recycler View</li></p><p><li>SQLite database/Room</li></p><p><li>Using graphs and charts in android.</li></p></ul><p></p></li></ul></p>\
        <h3 id="4healthapp">4. Health Center App</h3><ul><li><p><strong>Suggested Audience:</strong> First years</p></li><li><p><strong>Description:</strong> This app is meant to track down the treatment for several patients in a health center by means of a simple and interactive mobile application. The app should have the following features :- </p></li><ol><li>Authentication of users and creating profiles.</li><li>Recycler view to show all patients.</li><li>Activity to input daily data/stats for each patient.</li><li>Firebase database  for storing and retrieving data.</li><li>Dispalying statistical data in form of line graphs.</li><li>Interactive UI</li><li>Additional features/improvements that can be added.</li></ol></li><li><p><strong>Goals:</strong> </p><p><ul><li>Building the app to completion/adequate progress.</li></ul></p><li><p><strong>Requirements:</strong> </p><p><ul><li>Knowledge of Java, XML and Android basics.</li></p><p><li>Recycler View</li></p><p><li>Firebase</li></p><p><li>Using API for  graphs.</li></p></ul><p></p></li></ul></p>\
        <h3 id="5onestopshop">5. One-Stop Shop</h3><ul><li><p><strong>Suggested Audience:</strong> First years</p></li><li><p><strong>Description:</strong> This app will contain all the information of our college canteens, stationary shops, and any outlet in ISM. It will also contain information about the stalls which will present at the time of events. In this app we will provide each shops contact numbers so that anyone wants to know anything extra about the store it can contact the store keeper. In information of stores the app will have the timings, items, rates. We will provide a system where customer can pre-order something like Cake, Maggi which can be confirmed by shop keeper so customer does not have to wait for his order to get ready<li><p><strong>Goals:</strong> </p><p><ul><li>Main aim of this app is to connect all the stores at ISM in one place.</li> <li>To provide the information of store items so that consumer can go to a right shop according to his/her requirements. By providing contact number a person gets surety whether an item is available in store or not without going to shop in person.</li> <li> To provide the information of stall at the time of events and the stalls inside ISM.</li> <li>To reduce the wait time for order getting ready. All this in one app. </li></ul></p><li><p><strong>Requirements:</strong> </p><p><ul><li>Android studio</li></p><p><li>Recycler View</li></p><p><li>Firebase</li></p><p><li>Payment Gateway integration (if possible)</li></p><p><li>Material Design</li></p></ul><p></p></li></ul></p>',
      img: "img/tracks-ad.png"
    },
    {
      id: "ml",
      title: "Machine Learning",
      body:
        '<h3 id="1mllib1">1. ML Library </h3><ul><li><p><strong>Suggested Audience:</strong> First years and above</p></li><li><p><strong>Description:</strong>You will develop a machine learning library consisting of various machine learning algorithms from scratch. There\'s no better way to build and test yourself about the true understanding of the algorithms.<br/>You\'ll be forced to think about every step, and this leads to true mastery. You\'ll learn how to translate mathematical instructions into code.</p></li><li><p><strong>Goals:</strong> </p><ul><li>You will be implementing the following algorithms and testing each of them on MNIST Dataset.</li><li>Phase 1: Implementation of Linear Regression, Logistic Regression, K-Nearest Neighbors.</li><li>Phase 2: Implementation of K- Means Clustering, Neural Network, more if time permits.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of machine learning algorithms.</li></p><p><li>Basic knowledge of Python, object-oriented programming and libraries - Numpy, Pandas and Matplotlib.</li></ul><p></p></li></p><p><li><p><strong>Resources:</strong> </p></p><p><ul><p><li>A basic overview of the algorithms is given <a href="https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/">here</a>.</li></p><p><li>All resources ( for Python, libraries, MNIST Dataset, etc ) will be provided.</li></p></ul></p><p></li></ul></p>\
         <h3 id="2mllib2">2. ML Library - II </h3><ul><li><p><strong>Suggested Audience:</strong> Second years and above</p></li><li><p><strong>Description:</strong> You will be dealing with Deep Learning. Starting from a coding a small architecture, you may contribute for helping AI to get that science fiction state which everyone has so imagined. </p></li><li><p><strong>Goals:</strong> </p><ul><li>Phase 1: Implementation of a light CNN architecture and tabulating its performance on a range of self-implemented activation functions and optimizers.</li><li>Phase 2:  Implementation of a \'grid-search\' feature for selecting the implemented optimizer and activation functions which work best for a given dataset for a simple neural network.</li><li>A list of optimizer and activation function will be provided by the mentors.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of Deep Learning and Convolutional Neural Network. Knowledge of Python and the essential libraries - Numpy, Pandas, Matplotlib, Pytorch.</li></p></ul><p></p></li></p><p><li><p><strong>Resources:</strong> </p></p><p><ul><p><li>All resources ( for Python, libraries, etc ) will be provided.</li></p></ul></p><p></li></ul></p>\
         <h3 id="3mlessentials">3. ML Essentials </h3><ul><li><p><strong>Suggested Audience:</strong> First years and above</p></li><li><p><strong>Description:</strong> You will be working on the process which is done when you first encounter any data set - Data Exploration and Feature Engineering. Data Exploration ( EDA ) , an approach to \'see\' the data sets and summarize the main characteristics. <br/>  Feature Engineering  is creating new and potentially helpful features that can help a machine learning model perform better. </p></li><li><p><strong>Goals:</strong> </p><ul><li>A dataset will be provided by mentor. The task will be of supervised learning.</li><li>Phase 1: Understanding and Cleaning Data, Performing EDA with proper Visual Presentation and using ready-to-use ML Library for the supervised task.</li><li>Phase 2: Improving the performance of model by feature engineering.</li><li>Your submission for this should include details of all the steps you have used to arrive the result. More about the same will be conveyed to you later by mentors.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of machine learning algorithms.</li></p><p><li>Basic knowledge of Python, object-oriented programming and libraries - Numpy, Pandas and Matplotlib.</li></ul><p></p></li></p><p><li><p><strong>Resources:</strong> </p></p><p><ul><p><li>All resources ( for Python, libraries, etc ) will be provided.</li></p></ul></p><p></li></ul></p>',
      img: "img/tracks-ml.png"
    }
  ];

  function getNextTrackIndex(currentTrackId) {
    var currentIndex = tracks
      .map(function(track) {
        return track.id;
      })
      .indexOf(currentTrackId);

    return currentIndex === tracks.length - 1 ? 0 : currentIndex + 1;
  }

  function setTrackData(track) {
    var modal = $("#trackModal");
    modal.find(".modal-title").text(track.title);
    modal.find(".modal-body .modal-inner").html(track.body);
    modal.find(".track-img").css("background", 'url("' + track.img + '")');
    modal.data("id", track.id);
  }

  $("#trackModal").on("show.bs.modal", function(event) {
    var button = $(event.relatedTarget); // Button that triggered the modal
    var selectedTrackId = button.data("track"); // Extract info from data-* attributes

    var selectedTrack = tracks.filter(function(track) {
      return track.id === selectedTrackId;
    })[0];

    setTrackData(selectedTrack);
  });

  $("#nextTrack").on("click", function() {
    var currentTrackId = $("#trackModal").data("id");

    setTrackData(tracks[getNextTrackIndex(currentTrackId)]);
  });
})(jQuery); // End of use strict
