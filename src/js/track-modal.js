(function($) {
  "use strict"; // Start of use strict

  var tracks = [
    {
      id: "cybers",
      title: "Infosec",
      body:
        '<h3 id="1keylogger">1. Keylogger</h3><ul><li><strong>Suggested Audience:</strong> First years and above</li><li><strong>Description:</strong> A small program which will secretly log keyboard usage, having these features (but not limited to)-</li><ol><li>Logs keyboard usage in a target computer.</li><li> Program runs in the background. </li><li>Records combination of keys used.</li></ol></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of Python/C++ and its libraries</li></p><p></ul></p><p></li></ul></p>\
         <h3 id="2decrypter">2. Decrypter</h3><ul><li><strong>Suggested Audience:</strong> First years and above</li><li><strong>Description:</strong> A program to decode various types of encryption, having these features (but not limited to)-</li><ol><li>Decodes Caesar cipher.</li><li> Decodes Vignere cipher. </li><li>Decodes various RSA encryption.</li></ol></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of Python/C++ and its libraries</li></p><p></ul></p><p></li></ul></p>',
      img: "img/tracks-infosec.png"
    },
    {
      id: "iot",
      title: "Web Development",
      body:
        '<div class="card my-3"><div class="card-header btn collapsed" id="web1" data-toggle="collapse" data-target="#webOne" aria-expanded="true" aria-controls="collapseWeb1"><h3 id="1newsroom">GameBase-An Online Gaming Website</h3></div><div id="webOne" class="collapse" aria-labelledby="web1" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong>A large database of Online games from which user can also search games using search bar and also category-wise.These features are expected(but not limited to) -</li></ul><ol><li>A sign in-signup landing page for user authentication.</li><li> A search(by their names) feature for games(using Search bar).</li><li>Tategory-wise distribution of games(or we can say category filter).</li><li>New Game upload feature for admin.(admin can change a normal user to an admin from database).</li></ol><ul><li><p><strong>Goals:</strong> </p><ul><li>Build a basic frontend layout of the website using HTML, CSS (or bootstrap).</li>	<li>Integrate the website with Firebase in order to build sign-in and sign-up system (basically using firebase authentication).</li><li>After successful sign-in, redirect the user to the home page, where all the games(most popular games on top(optional)) will be displayed. The page should also have a search bar on the top for dynamic searching of games and a dropdown for category filtering.(You can pick games from website given in requirements).</li><li>There should be a separate page for admins to upload new games.</li></ul></li><li><p><strong>Requirements:</strong> </p><ul><p><li>Basic knowledge of HTML, CSS and JavaScript</li></p><p><li> Basic knowledge of firebase, how to use its features, etc.<b>(firebase is not necessary, you can use alternatives like local storage or cookies)</b></li></p><p><li>Knowledge of bootstrap (not necessary, but would be an advantage)</li></p><p><li>Games\' iframe <a href="https://html5games.com/">links</a>(please go through all types of usages of iframes in website for better understanding of implementation).</li></p></ul></p><p></li></p><p></ul></p></div></div></div>\
        <div class="card my-3"><div class="card-header btn collapsed" id="web2" data-toggle="collapse" data-target="#webTwo"aria-expanded="true" aria-controls="collapseWeb1"><h3 id="1newsroom">PenName Chooser</h3></div><div id="webTwo" class="collapse" aria-labelledby="web1" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong>A pen name chooser website to select a suitable common pen name for different Having features but not limited to -</li></ul><ol><li>A form to enter desired pen name. Option to select multiple platform out of the given list of websites.</li><li>It should show that in which platform the user name is available and in which it is not.</li></ol><ul><li><p><strong>Goals:</strong> </p><ul><li>Build a basic frontend layout of the website using HTML, CSS (or Bootstrap).</li><li>To create a form displaying a list of websites (gaming, coding, freelancing and social media platforms).</li><li>Saving the previously shown result in firebase database and/or local storage</li></ul></li><li><p><strong>Requirements:</strong> </p><ul><p><li>Basic knowledge of HTML, CSS and <a href="https://www.w3schools.com/js/default.asp">JavaScript</a></li></p><p><li>Basic knowledge of API and status codes</li></p><p><li> Basic knowledge of <a href="https://www.tutorialspoint.com/firebase/">firebase</a>, how to use its features, etc.<b>(firebase is not necessary, you can use alternatives like local storage or cookies)</b></li></p><p><li>Knowledge of <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/">bootstrap</a> (not necessary, but would be an advantage)</li></p></ul></li></ul></div></div></div>\
        <div class="card my-3"> <div class="card-header btn collapsed" id="web3" data-toggle="collapse" data-target="#webThree" aria-expanded="true" aria-controls="collapseWeb3"><h3 id="1newsroom">Notes App</h3> </div> <div id="webThree" class="collapse" aria-labelledby="web3" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong>A simple website to login,view all the notes written previously,add new notes to the database.The application is expected(but not limited to) to have following features : </li> </ul> <ol> <li>A signin-signup landing page for user authentication.</li> <li>Home page showing all the previously added notes by the user.</li> <li>User should be able to add new note,edit and delete a note.</li> <li>User should be able to see the date and time of creation of the note.</li> </ol> <ul> <li> <p><strong>Goals:</strong> </p> <ul> <li>Build a basic frontend layout of the website using HTML, CSS (and/or Bootstrap).</li> <li>Integrate the website with Firebase in order to build sign-in and sign-up system (basically using firebase authentication).</li> <li>fter successful sign-in, redirect the student to the home page, where previously added notes will be displayed.</li> <li>On the home page itself,make a button to create a new note.Clicking on the button will lead the user to a new webpage contaning a form to create a note.</li> <li>For every note in the home page ,add the feature to edit or delete.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Basic knowledge of HTML, CSS and <a href="https://www.w3schools.com/js/default.asp">JavaScript</a></li></p> <p><li> Basic knowledge of <a href="https://www.tutorialspoint.com/firebase/">firebase</a>, how to use its features, etc.<b>(firebase is not necessary, you can use alternatives like local storage or cookies)</b></li></p> <p><li>Knowledge of <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/">bootstrap</a> (not necessary, but would be an advantage)</li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-3"> <div class="card-header btn collapsed" id="web4" data-toggle="collapse" data-target="#webFour" aria-expanded="true" aria-controls="collapseWeb4"><h3 id="1newsroom">College Petition Writing Website</h3> </div> <div id="webFour" class="collapse" aria-labelledby="web4" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong>The application is expected(but not limited to) to have following features : </li> </ul> <ol> <li>A signin-signup landing page for user authentication.</li> <li>The person after logging should be able to write and post the petition.</li> <li>Can share the petition on the social media handles.</li> <li>There should be an option to upvote/downvote the petition.</li> <li>Also implement that if the no. of upvotes increases certain limit, an alert/mail shoul be sent to the head/person concerned of senate.</li> <li>If time permits can add a text editor for writing up the petitions.</li> <li>Since it will be college petition page , can add details about college , administration etc.</li> </ol> <ul> <li> <p><strong>Goals:</strong> </p> <ul> <li>Build a basic frontend layout of the website using HTML, CSS (and/or Bootstrap).</li> <li>Integrate the website with Firebase in order to build sign-in and sign-up system (basically using firebase authentication).</li> <li>Create a page to add/write a petition.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Basic knowledge of HTML, CSS and <a href="https://www.w3schools.com/js/default.asp">JavaScript</a></li></p> <p><li> Basic knowledge of <a href="https://www.tutorialspoint.com/firebase/">firebase</a>, how to use its features, etc.<b>(firebase is not necessary, any other database can also be used)</b></li></p> <p><li>Knowledge of <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/">bootstrap</a> (not necessary, but would be an advantage)</li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-3"> <div class="card-header btn collapsed" id="web5" data-toggle="collapse" data-target="#webFive" aria-expanded="true" aria-controls="collapseWeb5"><h3 id="1newsroom">To Do List Browser Extension</h3> </div> <div id="webFive" class="collapse" aria-labelledby="web5" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> A chrome extension which can be used to create and manage to-dos.This extension would integrate on the top right side of the browser and no other page would be required to create and handle to-dos </li> </ul> <ol> </ol> <ul> <li> <p><strong>Goals:</strong> </p> <ul> <li>Build a nice looking popup html file with CSS.</li> <li>Use check boxes and delete button for organising to-dos.</li> <li>Use localStorage provided by extension for storing the list.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Basic knowledge of HTML, CSS and <a href="https://www.w3schools.com/js/default.asp">JavaScript</a></li></p> <p><li><a href="https://developer.chrome.com/docs/extensions/mv2/getstarted/">Chrome Extension Development Tool</a></li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-3"> <div class="card-header btn collapsed" id="web6" data-toggle="collapse" data-target="#webSix" aria-expanded="true" aria-controls="collapseWeb6"><h3 id="1newsroom">Video Searching Website</h3> </div> <div id="webSix" class="collapse" aria-labelledby="web6" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> A Video searching website to search across the whole video with the help of the video\'s transcript. The features must include : </li> </ul> <ol> <li>A sign in-sign up landing page.</li> <li>After successful login, users dashboard must contain the categorized uploaded YouTube links.</li> <li>User must have the privilege to add/delete categories as well as links uploaded.</li> <li>A voice-search feature to search for the keywords in the transcript of the particular video and seek to the desired point.</li> </ol> <ul> <li> <p><strong>Goals:</strong> </p> <ul> <li>Build a basic frontend layout of the website using HTML, CSS (and/or Bootstrap).</li> <li>Integrate the website with Firebase in order to build sign-in and sign-up system (basically using firebase authentication).</li> <li>Use firebase database to store user data.</li> <li>Use Google\'s Text to Speech API to implement voice search functionality.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Basic knowledge of HTML, CSS and <a href="https://www.w3schools.com/js/default.asp">JavaScript</a></li></p> <p><li>Basic knowledge of API (<a href="https://cloud.google.com/text-to-speech/docs/quickstart-protocol">Google\'s Text to Speech API</a>)</li></p> <p><li> Basic knowledge of <a href="https://www.tutorialspoint.com/firebase/">firebase</a>, how to use its features, etc.(firebase is not necessary, any other database can also be used)</li></p> <p><li>Knowledge of <a href="https://getbootstrap.com/docs/5.0/getting-started/introduction/">bootstrap</a> (not necessary, but would be an advantage)</li></p> </ul> </li> </ul> </div> </div> </div>',
      img: "img/tracks-webd.png"
    },
    {
      id: "fintech",
      title: "App Development",
      body:
        '<div class="card my-4"> <div class="card-header btn collapsed" id="android1" data-toggle="collapse" data-target="#androidOne" aria-expanded="true" aria-controls="collapseAndroid1"><h3 id="1newsroom">Online Tic-Tac-Toe with Blogs</h3> </div> <div id="androidOne" class="collapse" aria-labelledby="android1" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> The proposed idea is an Android App that allows users to create an ID and see the list of registered users with an option to play tic-tac-toe with them online and an option to share your thoughts with everyone using a blogging service. </li> </ul> <ul> <li> <p><strong>Features:</strong> </p> <ul> <li>Firebase Auth to provide authentication protection.</li> <li>Three tabs on Main Screen <ol type="a"> <li>Pending request to play a game.</li> <li>List of Registered users.</li> <li>Blog page where you can see others thoughts.</li> </ol> </li> <li>Clicking on any user will send a request to that user, once he accepts it, a room will be created in the firebase with both of them and they can play. </li> <li>After the match is done, that room will be destroyed.</li><li>Attractive UI is to be looked after.</li><li>In blogs section, <ol type="a"><li>You will see list of all thoughts in recycler view.</li><li>A floating action button which allows you to create one and POST it among friends.</li></ol></li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Android</li></p> <p><li>Java, XML</li></p> <p><li>Firebase authentication system to create user\'s profile.</li></p> <p><li>Front-End Components: NavigationDrawer/TabLayout, RecyclerView, FloatingActionButtons</li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-4"> <div class="card-header btn collapsed" id="android2" data-toggle="collapse" data-target="#androidTwo" aria-expanded="true" aria-controls="collapseAndroid2"><h3 id="1newsroom">Link Shortener App</h3> </div> <div id="androidTwo" class="collapse" aria-labelledby="android2" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> A very basic app that uses one of the link shortening services available on the web and returns a shortened link for the URL entered. The app also saves the history of all the generated links for easy reference of the user. </li> </ul> <ul> <li> <p><strong>Features:</strong> </p> <ul> <li>The App can be used only by Authenticated users using FirebaseAuth service. A sign in and sign up screen are present in the app for this purpose.</li> <li>The main function of the app will be to generate Shortened URLs for any given link, by making use of any one of the various <b>APIs</b> available for the purpose on the internet.</li> <li>The app should also have the features to save and delete the records of all the links generated by a particular user in FIREBASE along with all the details like original link, time and date of generation, etc.</li> <li>The app should also show the saved records using RecyclerView on a separate history page.</li> <li>The app should also feature a Profile page with options to view his personal details, like his name, no of URLs generated till date, etc, and possibly edit those details which can be.</li> <li>Any more features you’d like to implement and incorporate into your app are welcome.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Android Studio</li></p> <p><li>Java, XML</li></p> <p><li>Firebase authentication system to create user\'s profile.</li></p> <p><li>Front-End Components: NavigationDrawer/TabLayout, RecyclerView, FloatingActionButtons</li></p> <p><li>Firebase auth service</li></p> <p><li>Firebase realtime database</li></p> <p><li>RETROFIT</li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-4"> <div class="card-header btn collapsed" id="android3" data-toggle="collapse" data-target="#androidThree" aria-expanded="true" aria-controls="collapseAndroid3"><h3 id="1newsroom">Movie Maniac / Podcast Maniac</h3> </div> <div id="androidThree" class="collapse" aria-labelledby="android3" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> The proposed idea is an Android app that will keep you updated with the latest movies/podcast. This should also provide their ratings on various platforms, description, and actors,etc. And can directly get you to the booking website. </li> </ul> <ul> <li> <p><strong>Features:</strong> </p> <ul> <li>Create user profile after authentication</li> <li>It should show the list of latest movies under different categories.</li> <li>Pass intent to move from one activity to another and create a web view to display full movie details.</li> <li>Retrofit pipelines to fetch data from API.</li> <li>It should directly take you to the booking page if you want to book a seat (available from API).</li> <li>An attractive UI for better user experience.</li> <li>Additional features and Ideas are welcome.</li> <li>Notifications are OPTIONAL.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Android</li></p> <p><li>Java, XML</li></p> <p><li>Firebase authentication system to create user\'s profile.</li></p> <p><li>Hetero Recycler View to show all the movies under different categories in the home screen.</li></p> <p><li>Retrofit networking to fetch data from the api\'s.</li></p> <p><li>Front-End Components: NavigationDrawer/TabLayout, RecyclerView, FloatingActionButtons</li></p> <p><li>Notification System to give notifications about new releases.</li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-4"> <div class="card-header btn collapsed" id="android4" data-toggle="collapse" data-target="#androidFour" aria-expanded="true" aria-controls="collapseAndroid4"><h3 id="1newsroom">Health Companion</h3> </div> <div id="androidFour" class="collapse" aria-labelledby="android4" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> The proposed idea is an Android app that will help users monitor and take care of their health according to various pointers such as adequate sleep, exercise, water intake and step-count. Authentication is necessary using firebase. </li> </ul> <ul> <li> <p><strong>Features:</strong> </p> <ul> <li>The app should keep records of sleeping time and waking-up time (with alarm) as entered by the user. It should notify the user about oversleeping and undersleeping.</li> <li>It should keep records of the time spent daily on exercise, as well as the weekly and monthly average.</li> <li>It should help ensure daily intake of water, through timely reminders (notifications) throughout the day. Inadequate water intake should be reported.</li> <li>A pedometer should be implemented in the app to count the number of steps walked.</li> <li>Additional features are welcome after due discussion with the mentors.</li> <li>Notifications are OPTIONAL.</li> </ul> </li> <li> <p><strong>Requirements:</strong> </p> <ul> <p><li>Android Studio</li></p> <p><li>Java, XML</li></p> <p><li>Front-End Components: NavigationDrawer/TabLayout, RecyclerView, FloatingActionButtons</li></p> <p><li>Firebase auth service</li></p> <p><li>ROOM library / SQLDatabase</li></p> <p><li>Notification system</li></p> <p><li>Using Accelerometer Sensor for Step-Counting</li></p> </ul> </li> </ul> </div> </div> </div>\
        <div class="card my-4"> <div class="card-header btn collapsed" id="android5" data-toggle="collapse" data-target="#androidFive" aria-expanded="true" aria-controls="collapseAndroid5"><h3 id="1newsroom">Dictionary App</h3> </div> <div id="androidFive" class="collapse" aria-labelledby="android5" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li> <strong>Description:</strong> This application will help the user to get meanings of new words. Improve their vocabulary. Get a wikipedia link for detailed information.The user has to select the word and use share to share that word with the application and get its meaning.The user can also type in the word he wants to get the meaning of. </li> </ul> <ul> <li> <p><strong>Features:</strong> </p> <ul> <li>Login Using Name and Activity.</li> <li>The History of Words searches displayed using recycler view.</li> <li>Wikipedia Reference if the user makes a choice.</li> <li>Each term and its meaning using Google webpage or can use a database.</li> <li>can add pronounciations of the word.</li> </ul> </li> <li> <p><strong>TechStack:</strong> </p> <ul> <p><li>Android Studio</li></p> <p><li>Firebase Authentication</li></p> <p><li>WebPage</li></p> <p><li>SQLite Database, EngDictionary database</li></p> <p><li>RecyclerView</li></p> </ul> </li> </ul> </div> </div> </div>',
      img: "img/tracks-ad.png"
    },
    {
      id: "ml",
      title: "Machine Learning",
      body:
        '<h3 id="1mllib1">1. ML Library </h3><ul><li><p><strong>Suggested Audience:</strong> First years and above</p></li><li><p><strong>Description:</strong>You will develop a machine learning library consisting of various machine learning algorithms from scratch. There\'s no better way to build and test yourself about the true understanding of the algorithms.<br/>You\'ll be forced to think about every step, and this leads to true mastery. You\'ll learn how to translate mathematical instructions into code.</p></li><li><p><strong>Goals:</strong> </p><ul><li>You will be implementing the following algorithms and testing each of them on MNIST Dataset.</li><li>Phase 1: Implementation of Linear Regression, Logistic Regression, K-Nearest Neighbors.</li><li>Phase 2: Implementation of K- Means Clustering, Neural Network, more if time permits.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of machine learning algorithms.</li></p><p><li>Basic knowledge of Python, object-oriented programming and libraries - Numpy, Pandas and Matplotlib.</li></ul><p></p></li></p><p><li><p><strong>Resources:</strong> </p></p><p><ul><p><li>A basic overview of the algorithms is given <a href="https://www.analyticsvidhya.com/blog/2017/09/common-machine-learning-algorithms/">here</a>.</li></p><p><li>All resources ( for Python, libraries, MNIST Dataset, etc ) will be provided.</li></p></ul></p><p></li></ul></p>\
         <h3 id="2mllib2">2. ML Library - II </h3><ul><li><p><strong>Suggested Audience:</strong> Second years and above</p></li><li><p><strong>Description:</strong> You will be dealing with Deep Learning. Starting from a coding a small architecture, you may contribute for helping AI to get that science fiction state which everyone has so imagined. </p></li><li><p><strong>Goals:</strong> </p><ul><li>Phase 1: Implementation of a light CNN architecture and tabulating its performance on a range of self-implemented activation functions and optimizers.</li><li>Phase 2:  Implementation of a \'grid-search\' feature for selecting the implemented optimizer and activation functions which work best for a given dataset for a simple neural network.</li><li>A list of optimizer and activation function will be provided by the mentors.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of Deep Learning and Convolutional Neural Network. Knowledge of Python and the essential libraries - Numpy, Pandas, Matplotlib, Pytorch.</li></p></ul><p></p></li></p><p><li><p><strong>Resources:</strong> </p></p><p><ul><p><li>All resources ( for Python, libraries, etc ) will be provided.</li></p></ul></p><p></li></ul></p>\
         <h3 id="3mlessentials">3. ML Essentials </h3><ul><li><p><strong>Suggested Audience:</strong> First years and above</p></li><li><p><strong>Description:</strong> You will be working on the process which is done when you first encounter any data set - Data Exploration and Feature Engineering. Data Exploration ( EDA ) , an approach to \'see\' the data sets and summarize the main characteristics. <br/>  Feature Engineering  is creating new and potentially helpful features that can help a machine learning model perform better. </p></li><li><p><strong>Goals:</strong> </p><ul><li>A dataset will be provided by mentor. The task will be of supervised learning.</li><li>Phase 1: Understanding and Cleaning Data, Performing EDA with proper Visual Presentation and using ready-to-use ML Library for the supervised task.</li><li>Phase 2: Improving the performance of model by feature engineering.</li><li>Your submission for this should include details of all the steps you have used to arrive the result. More about the same will be conveyed to you later by mentors.</li></ul></li><li><p><strong>Requirements:</strong> </p><p><ul><li>Basic knowledge of machine learning algorithms.</li></p><p><li>Basic knowledge of Python, object-oriented programming and libraries - Numpy, Pandas and Matplotlib.</li></ul><p></p></li></p><p><li><p><strong>Resources:</strong> </p></p><p><ul><p><li>All resources ( for Python, libraries, etc ) will be provided.</li></p></ul></p><p></li></ul></p>',
      img: "img/tracks-ml.png"
    }
  ];

  function getNextTrackIndex(currentTrackId) {
    var currentIndex = tracks
      .map(function(track) {
        return track.id;
      })
      .indexOf(currentTrackId);

    return currentIndex === tracks.length - 1 ? 0 : currentIndex + 1;
  }

  function setTrackData(track) {
    var modal = $("#trackModal");
    modal.find(".modal-title").text(track.title);
    modal.find(".modal-body .modal-inner").html(track.body);
    modal.find(".track-img").css("background", 'url("' + track.img + '")');
    modal.data("id", track.id);
  }

  $("#trackModal").on("show.bs.modal", function(event) {
    var button = $(event.relatedTarget); // Button that triggered the modal
    var selectedTrackId = button.data("track"); // Extract info from data-* attributes

    var selectedTrack = tracks.filter(function(track) {
      return track.id === selectedTrackId;
    })[0];

    setTrackData(selectedTrack);
  });

  $("#nextTrack").on("click", function() {
    var currentTrackId = $("#trackModal").data("id");

    setTrackData(tracks[getNextTrackIndex(currentTrackId)]);
  });
})(jQuery); // End of use strict
