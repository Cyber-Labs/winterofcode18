(function ($) {
  "use strict"; // Start of use strict

  var tracks = [
    {
      "id": "cybers",
      "title": "Infosec",
      "body": "<div class='card my-3'> <div class='card-header collapsed' id='ps1' data-toggle='collapse' data-target='#psOne' aria-expanded='true' aria-controls='collapsePs1'><div style='margin:0px; padding: 0px;' class='container'><div style='margin:0px; padding: 0px;' class='row'><div class='col-11'><h3 id='1newsroom'>Developing Malware for Real-Time Network Monitoring and Keystroke Capture to Secure User Credentials</h3></div><div class='col-1'><span class='chevron-icon'></span></div></div></div></div> <div id='psOne' class='collapse' aria-labelledby='ps1' data-parent='#accordion'> <div class='card-body pt-2'> <ul> <li><strong>Description:</strong>Design a malware system that captures and monitors user activity on specific websites to secure credentials while remaining undetected by security tools.</li> </ul> <ul> <li><p><strong>Key Features:</strong></p> <li>Continuously monitor network traffic and send data to a remote server.</li> <li>Activate a keylogger to capture input on specific websites (e.g., Instagram, Facebook) and maintain real-time records in a database.</li> <li>Design a user-friendly interface for administrators to monitor activities.</li> <li><strong>Optional Features:</strong> Clearing saved passwords to prompt re-entry, anti-detection mechanisms, and additional innovative features.</li> </ul> </div> </div> </div>\
      <div class='card my-3'> <div class='card-header collapsed' id='ps2' data-toggle='collapse' data-target='#psTwo' aria-expanded='true' aria-controls='collapsePs2'><div style='margin:0px; padding: 0px;' class='container'><div style='margin:0px; padding: 0px;' class='row'><div class='col-11'><h3 id='2newsroom'>Secure Password Manager with Encryption and Strong Password Generation</h3></div><div class='col-1'><span class='chevron-icon'></span></div></div></div></div> <div id='psTwo' class='collapse' aria-labelledby='ps2' data-parent='#accordion'> <div class='card-body pt-2'> <ul> <li><strong>Description:</strong>Create a secure password manager emphasizing encryption, random password generation, and user-friendly operations.</li> </ul> <ul> <li><p><strong>Key Features:</strong></p> <li>Master Key Setup: Secure master password that derives an encryption key and is used for authentication.</li> <li>Password Generation: Generate strong, random passwords meeting complexity requirements.</li> <li>Password Management: Add, retrieve, and delete credentials with encryption ensuring confidentiality.</li> <li>Master Key Security: Encrypt and store the master key securely for sensitive operations.</li> </ul> </div> </div> </div>\
      <div class='card my-3'> <div class='card-header collapsed' id='ps3' data-toggle='collapse' data-target='#psThree' aria-expanded='true' aria-controls='collapsePs3'><div style='margin:0px; padding: 0px;' class='container'><div style='margin:0px; padding: 0px;' class='row'><div class='col-11'><h3 id='3newsroom'>Simple Terminal-Based File Analysis Tool</h3></div><div class='col-1'><span class='chevron-icon'></span></div></div></div></div> <div id='psThree' class='collapse' aria-labelledby='ps3' data-parent='#accordion'> <div class='card-body pt-2'> <ul> <li><strong>Description:</strong>Develop a Linux-based tool for file analysis, identifying file types, extracting readable text, and detecting hidden content using manual techniques.</li> </ul> <ul> <li><p><strong>Key Features:</strong></p> <li>File Type Detection: Use magic bytes to classify file formats.</li> <li>Text Extraction: Extract readable ASCII/Unicode text.</li> <li>Hex Dump and Header Analysis: Preview file content and analyze headers.</li> <li>Steganography Checks: Perform LSB analysis for images and detect hidden data.</li> <li>Custom Steganography Detection: Create your method for hiding data in images.</li> <li>Report Generation: Generate a text report summarizing analysis results.</li> </ul> </div> </div> </div>\
      <div class='card my-3'> <div class='card-header collapsed' id='ps4' data-toggle='collapse' data-target='#psFour' aria-expanded='true' aria-controls='collapsePs4'><div style='margin:0px; padding: 0px;' class='container'><div style='margin:0px; padding: 0px;' class='row'><div class='col-11'><h3 id='4newsroom'>Encrypted Ballot</h3></div><div class='col-1'><span class='chevron-icon'></span></div></div></div></div> <div id='psFour' class='collapse' aria-labelledby='ps4' data-parent='#accordion'> <div class='card-body pt-2'> <ul> <li><strong>Description:</strong>Design a secure, anonymous voting system leveraging homomorphic encryption and tokenization to protect privacy and ensure data integrity.</li> </ul> <ul> <li><p><strong>Key Features:</strong></p> <li>User Authentication: Secure registration and login with encrypted data.</li> <li>Anonymous Voting: Assign unique, encrypted tokens for anonymity.</li> <li>Secure Vote Tallying: Use homomorphic encryption to tally votes without decryption.</li> <li>Security Checks: Enforce single-use tokens and protect against data tampering.</li> <li>Scalability: Handle large traffic during voting sessions efficiently.</li> </ul> </div> </div> </div>\
      <div class='card my-3'> <div class='card-header collapsed' id='ps5' data-toggle='collapse' data-target='#psFive' aria-expanded='true' aria-controls='collapsePs5'><div style='margin:0px; padding: 0px;' class='container'><div style='margin:0px; padding: 0px;' class='row'><div class='col-11'><h3 id='5newsroom'>Web Vulnerability Scanner</h3></div><div class='col-1'><span class='chevron-icon'></span></div></div></div></div> <div id='psFive' class='collapse' aria-labelledby='ps5' data-parent='#accordion'> <div class='card-body pt-2'> <ul> <li><strong>Description:</strong>Develop a web vulnerability scanner to identify and analyze security vulnerabilities in web applications.</li> </ul> <ul> <li><p><strong>Key Features:</strong></p> <li>Network Scanning: Identify open ports and network vulnerabilities.</li> <li>Subdomain Enumeration: Discover subdomains of the target domain.</li> <li>Vulnerable Directory Listing: Crawl directories for sensitive information.</li> <li>SQL Injection and XSS Detection: Identify injection and scripting vulnerabilities.</li> <li>Brute Force Attacks: Test authentication strength.</li> </ul> </div> </div> </div>",
      "img": "img/tracks-infosec.png"
    }
,    
    {
      id: "iot",
      title: "Web Development",
      body: '<div class="card my-3"><div class="card-header collapsed" id="web2" data-toggle="collapse" data-target="#webTwo" aria-expanded="true" aria-controls="collapseWeb2"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Fruit Ninja(Game)</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="webTwo" class="collapse" aria-labelledby="web2" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong>The game will be a 2d replica of the original fruit ninja game,different types of fruit will pop out from the bottom of the screen and you have to slice them to earn points(any artstyle is acceptable).</li></ul><ul><li><p><strong>Goals:</strong></p><ul><li>Animation for slicing(at the very least,just change the cursor to a knife when held down),and when slicing through the fruit,just make the fruit burst when we slice through the fruit.</li><li>Fruit Variety: Slice through 3-4 types of fruits, each with unique shapes, sizes, and point values (e.g., apples, bananas, pineapples, and watermelons). Fruits spawn randomly from the bottom of the screen, moving horizontally and vertically across the screen (e.g., an apple might appear from the left, moving right).</li><li>Gameplay Mechanics: Slice fruits to earn points</li><li>Game Over Conditions: Fail to slice three or more fruits, and it\'s game over! Bomb: slicing it will explode, ending your game.</li><li>Leaderboards: Add leaderboards to show top scores</li><li>User Authentication: Sign up to track your scores and to access the game.</li></ul></li><li><p><strong>Additional Features (Extra):</strong></p><ul><li>Super Fruit: Slice this special fruit as many times as possible within a time frame for bonus points (e.g., 5x points for 5 slices)</li><li>add SFX and Music</li><li>Enhanced Visuals: Improved slicing effects, making each cut feel more satisfying</li><li>A second sword which when selected will give more points for each slice.</li></ul></li><li><p><strong>Technical Requirements:</strong></p><ul><li>HTML</li><li>CSS</li><li>JavaScript</li><li>Firebase (for leaderboards, user authentication)</li></ul></li></div></div></div>\
        <div class="card my-3"><div class="card-header collapsed" id="web3" data-toggle="collapse" data-target="#webThree" aria-expanded="true" aria-controls="collapseWeb3"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">TypeRivals</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="webThree" class="collapse" aria-labelledby="web3" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong>This project is a typing speed test web application that allows users to participate in typing contests of varying durations and difficulties. Users can register and log in, choose contest parameters (time and complexity), and view results that include typing speed, accuracy, and analysis of mistakes. A leaderboard showcases top performers, and users can add friends and view their profiles and contest histories. The application will use HTML, CSS, JavaScript, Firebase. Cloudinary will be used for profile picture storage.</li></ul><ul><li><p><strong>Tech Stack</strong><br>Frontend: HTML, CSS, JavaScript<br>Backend & Database: Firebase (user authentication, data storage)<br>Optional API for Text Generation: Gemini (for generating text at various difficulty levels)<br>Image Storage: Cloudinary (for user profile pictures)</p></li><li><p><strong>Features:</strong></p><ul><li><strong>User Authentication:</strong> Sign-up and login functionality using Firebase Auth.</li><li><strong>Typing Contests:</strong> Users can participate in contests with three duration options: 30 seconds, 1 minute, or 2 minutes. Ratings given to the user must differ based on their typing speed (greater typing speed must fetch greater points). Display typing speed and accuracy after each contest.</li><li><strong>Duration Selection:</strong> Ability to choose the contest duration before starting.</li><li><strong>Leaderboard:</strong> Displays top typing scores. Ranks users based on speed, accuracy, and typing levels.</li><li><strong>User Profiles:</strong> Contains user information, profile picture, city, and typing stats. Displays user’s contest history and cumulative typing stats.</li><li><strong>Contest History:</strong> Detailed history of past contests, including score, accuracy, duration, and difficulty level.</li><li><strong>Typing Accuracy & Analysis:</strong> Provides analysis on typing accuracy and mistakes. Includes metrics such as the number of incorrect words and mistypes.</li></ul></li><li><p><strong>Additional Features:</strong></p><ul><li><strong>Text Generation with Gemini:</strong> Use Gemini to generate typing text based on selected difficulty level. Error handling: if Gemini is unavailable, retrieve text from a previously saved list.</li><li><strong>UI/UX Design:</strong> Focus on an intuitive, clean, and engaging interface with responsive design. Ensure accessibility and user-friendly interactions.</li><li><strong>Mistake Analysis & Feedback:</strong> Provide users with detailed mistake analysis, such as missed or incorrect words, allowing them to see their specific typing errors. Can use chart js for showing each mistake.</li><li><strong>Leaderboard with City-Based Sorting:</strong> Allow sorting and filtering on the leaderboard based on city, as specified in each user’s profile.</li><li><strong>User Levels & Badges:</strong> Introduce typing levels or ranks based on user ratings or cumulative scores. Possible levels: Typing Master, Legendary, Speedo, Fast Fingered, etc.</li><li><strong>Difficulty Selection:</strong> Ability to choose the contest difficulty level before starting.</li><li><strong>Blog Posting:</strong> Allow users to post blogs.</li></ul></li></div></div></div>\
        <div class="card my-3"><div class="card-header collapsed" id="web4" data-toggle="collapse" data-target="#webFour" aria-expanded="true" aria-controls="collapseWeb4"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">VoyageVerse (Travel Wishlist Platform)</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="webFour" class="collapse" aria-labelledby="web4" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong>VoyageVerse is an interactive platform for travel enthusiasts to explore, plan, and share experiences at various destinations worldwide. The app allows users to create a personalized wishlist of dream travel locations and provides a social review feature where users can view others\' experiences, photos, and travel tips for each location.</li></ul><ul><li><p><strong>Primary Goals:</strong></p><ul><li><strong>User Authentication:</strong> Users can securely create accounts, log in, and manage their personal wishlist and reviews. Authentication ensures that only registered users can contribute to the platform by adding wishlist items, photos, and reviews.</li><li><strong>Travel Wishlist:</strong> Users can create a wishlist by searching for and saving dream destinations. Each location features a striking image and a basic description to inspire and guide their travel aspirations.</li><li><strong>Social Review Platform:</strong> When users select a destination from their wishlist, they can access a feed of photos, reviews, and travel tips from other travelers. Users who have visited the destination can upload their photos, provide ratings, and share reviews and recommendations.</li></ul></li><li><p><strong>Additional/Optional Features:</strong></p><ul><li><strong>Weather Insights:</strong> A weather feature provides current conditions and forecasts for destinations on users\' wishlists, helping them plan for different climates. Users can view current temperature, weather conditions, and a short forecast for the next few days.</li><li><strong>Currency Converter:</strong> A simple currency converter with real-time exchange rates to help users prepare for foreign travel.</li><li><strong>Language Cheat Sheet:</strong> A translate feature providing essential phrases in the destination’s language to help users navigate foreign countries more comfortably.</li></ul></li><li><p><strong>Technologies:</strong></p><ul><li>Frontend: HTML, CSS, JavaScript</li><li>Backend: Firebase for Authentication and Firestore for storing wishlist and review data</li><li>APIs: <ul><li>Unsplash API for destination images</li><li>Cloudinary for photo storage</li><li>OpenWeatherMap API for weather insights</li><li>ExchangeRate-API for currency conversions</li><li>Translation API for language cheat sheet</li></ul></li></ul></p></div></div></div>\
       <div class="card my-3"><div class="card-header collapsed" id="web6" data-toggle="collapse" data-target="#webSix" aria-expanded="true" aria-controls="collapseWeb6"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Quiz App</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="webSix" class="collapse" aria-labelledby="web6" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Objective:</strong> Develop a Quiz Application using HTML, CSS, JavaScript, and Firebase that provides a platform for admins to create quizzes and users to attempt them while tracking and analyzing performance. The app fosters a community of quiz creators and participants by allowing users to upvote and sort quizzes based on relevance and topics.</li></ul><ul><li><strong>Core Features:</strong></li></ul><ol><li><strong>User Authentication and Profiles:</strong> Users can register, log in, and manage profiles using Firebase authentication. Profiles include quiz history, performance analytics, and leaderboard rankings.</li><li><strong>Quiz Creation by Admins:</strong> Admins can manually create quizzes with sections (e.g., Physics, Chemistry, Mathematics). Admins can use AI (Gemini API) to generate quiz questions, saving time and effort. Admins can assign custom marks for each question (positive for correct and negative/zero for incorrect). Admins must set a timer for each quiz (e.g., 30 minutes for the entire quiz). Admins can specify topics and difficulty levels for quizzes.</li><li><strong>Quiz Attempt and Performance Tracking:</strong> Users can attempt quizzes created by admins or create their own quizzes using the AI quiz generation feature. After submission, users can view their performance, including scores, accuracy, and completion times. Performance analytics are visualized using Chart.js for an intuitive review experience. Users’ quiz histories are saved and can be accessed anytime.</li><li><strong>Community and Relevance Features:</strong> Users can upvote quizzes based on relevance, creating a dynamic ranking system. Quizzes can be sorted by upvotes or topics, ensuring users find the most relevant and engaging content. The platform fosters a collaborative environment where users and admins engage with quiz content.</li><li><strong>Leaderboard System:</strong> Leaderboards display rankings based on user performance in individual quizzes. Rankings promote competition and engagement within the platform.</li></ol><ul><li><strong>Optional (Bonus) Features:</strong></li></ul><ol><li><strong>Customizable Marks:</strong> Admins can set unique positive and negative marks for each question rather than using uniform scores.</li><li><strong>Timed Quizzes for Individual Questions:</strong> Admins can assign timers for individual questions (e.g., 1 minute per question). If time runs out, the quiz automatically moves to the next question. Users cannot revisit previous questions, creating a strict quiz format.</li></ol><ul><li><strong>Success Criteria:</strong> The project will be evaluated based on the implementation of: <ul><li>User authentication, profile management, and quiz history tracking.</li><li>Admin and user roles for quiz creation and participation.</li><li>AI-powered quiz generation using Gemini API.</li><li>Comprehensive performance analytics with Chart.js.</li><li>Community features such as upvotes, sorting by relevance, and leaderboards.</li></ul></li></ul><ul><li><strong>Bonus points:</strong> Bonus points will be awarded for implementing optional features like customizable marks and timers for individual questions.</li></ul><ul><li><strong>Note:</strong> To upload images, instead of uploading images directly on Firebase, upload the images on Cloudinary and store the image URL in Firebase.</li></ul><ul><li><strong>Documentation Links:</strong></li><ul><li><a href="https://ai.google.dev/gemini-api/docs" target="_blank">Gemini API Documentation</a></li><li><a href="https://console.cloudinary.com/pm/c-4a8cfc21baa113a1e8de607ec6d751/getting-started" target="_blank">Cloudinary Documentation</a></li><li><a href="https://firebase.google.com/docs" target="_blank">Firebase Documentation</a></li></ul></ul></div></div></div>\
        <div class="card my-3"><div class="card-header collapsed" id="web8" data-toggle="collapse" data-target="#webEight" aria-expanded="true" aria-controls="collapseWeb8"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">SkillMatch - Campus Skills Networking Platform</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="webEight" class="collapse" aria-labelledby="web8" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> SkillMatch is an innovative platform that connects students and faculty within a campus based on their skills and project needs, fostering a collaborative community for skill development and project-based learning. Whether you\'re a student looking for a study partner in calculus, a faculty member seeking assistance with data analysis, or anyone eager to collaborate on a creative or technical project, SkillMatch is here to bridge the gap between talent and opportunities.</li></ul><ul><li><strong>Features:</strong></li></ul><ul><li>User Authentication: Use Firebase to enable sign-up/login, authenticating users and allowing them to create a unique skill profile.</li><li>Skill Profile Creation: Users can upload an image, add a description of their skills, specify any project interests or expertise areas, and include contact details (email and phone number) for direct communication.</li><li>Availability Toggle: Users can indicate if they are available to collaborate on projects or assist others, updating their status with a simple toggle.</li><li>Skill-Based Search: Users can browse a list of individuals with relevant skills or interests, filtered by categories such as subject, skill level, or project type.</li><li>Endorsement System (Optional): Users can endorse others for skills they have demonstrated, helping build credibility within the community.</li><li>Collaboration History (Optional): Users can view a history of their past collaborations, tracking their contributions and growth.</li><li>Messaging System (Optional): For additional convenience, users may choose to connect through an in-app messaging system if enabled.</li></ul><ul><li><strong>Goals:</strong></li></ul><ul><li>Create a user-friendly frontend using HTML and CSS to facilitate easy profile creation, skill browsing, and navigation.</li><li>Integrate Firebase to handle user authentication, profile photos, skill information storage, and contact details.</li><li>Allow users to toggle their collaboration availability status, ensuring accurate visibility for those actively seeking projects.</li><li>Implement an endorsement feature where users can give and receive skill ratings, building trust and reputation within the community.</li><li>Enable users to display contact information (email and phone number) to facilitate straightforward, direct communication with potential collaborators.</li></ul><ul><li><strong>Requirements:</strong></li><ul><li>Basic knowledge of HTML, CSS, and JavaScript for frontend development.</li><li>Familiarity with Firebase for authentication, image upload, and real-time database management.</li></ul></div></div></div>\
        <div class="card my-3"><div class="card-header collapsed" id="web7" data-toggle="collapse" data-target="#webSeven" aria-expanded="true" aria-controls="collapseWeb7"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Codeforces 1v1 Extension</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="webSeven" class="collapse" aria-labelledby="web7" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> This Codeforces extension is a real-time competitive platform where users can challenge each other to 1v1 programming battles, providing a seamless environment for creating/joining rooms, competing on problems, and declaring winners based on submissions.</li></ul><ul><li><strong>Features:</strong></li><ul><li>Room creation/joining with unique codes stored in Firebase Firestore.</li><li>Real-time chat for participants powered by Firebase.</li><li>Collaborative problem selection and competitive countdown timer.</li><li>Real-time submission tracking to declare winners instantly.</li><li>Dynamic room management with automatic deletion post-match.</li></ul><ul><li><strong>Goals:</strong></li><ul><li>Implement Firebase Firestore for real-time chat and room management.</li><li>Enable live updates using Firebase state management.</li><li>Provide a competitive timer and clean interface for declaring winners.</li><li>Seamlessly manage room creation, participant entry, and room deletion.</li></ul><ul><li><strong>Requirements:</strong></li><ul><li>Proficiency in HTML, CSS, and JavaScript for a responsive interface.</li><li>Firebase for authentication and real-time data handling.</li><li>Integrate Codeforces APIs or mock equivalents for problem validation.</li><li>Socket programming for live room updates and state changes.</li></ul></div></div></div>',
      img: "img/tracks-webd.png",
    },
    {
      id: "fintech",
      title: "App Development",
      body: '<div class="card my-4"><div class="card-header collapsed" id="android1" data-toggle="collapse" data-target="#androidOne" aria-expanded="true" aria-controls="collapseAndroid1"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">StreamEase</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="androidOne" class="collapse" aria-labelledby="android1" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Develop an Android app that streams videos from the internet, displaying them in an organized list format. The app will support audio-only playback and optional background playback, providing flexible media access.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>Fetches a list of videos from the Pexels API, displaying each with a thumbnail, title, and description.</li><li>Utilizes RecyclerView for efficient list management and Glide for thumbnail loading and caching.</li><li>Navigates to a player screen with ExoPlayer when a video is selected.</li><li>Supports playback controls including play, pause, seek, and switching to audio-only mode.</li><li>(Optional) Background playback, allowing audio to continue when minimized or locked.</li></ul></li><li><p><strong>Tech Stack:</strong></p><ul><li>Android Studio</li><li>Kotlin, XML</li><li>ExoPlayer</li><li>Glide</li><li>RecyclerView</li><li>Retrofit</li><li>Pexels API</li><li>WorkManager (Optional)</li></ul></li></ul></div></div></div> \
        <div class="card my-4"> <div class="card-header collapsed" id="android4" data-toggle="collapse" data-target="#androidFour" aria-expanded="true" aria-controls="collapseAndroid4"> <div style="margin:0px; padding: 0px;" class="container"> <div style="margin:0px; padding: 0px;" class="row"> <div class="col-11"><h3 id="1newsroom">Breeze</h3></div> <div class="col-1"><span class="chevron-icon"></span></div> </div> </div> </div> <div id="androidFour" class="collapse" aria-labelledby="android4" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li><strong>Description:</strong> A News Aggregator App that fetches and displays the latest news headlines and articles from various categories (e.g., sports, technology, politics). Users can filter news by keyword or source and read full articles in a web view.</li> </ul> <ul> <li><p><strong>Features:</strong></p> <ul><li>Display headlines, summaries, and images for top news articles using RecyclerView and Glide to show images.</li><li>Filter news by topic, keyword, or source (use News API for fetching all the data, and Retrofit to handle API calls).</li><li>Bookmark articles for reading later using Firebase Realtime Database and RecyclerView.</li><li>Pull-to-refresh for updating news.</li><li>(Optional) Click on articles to open full content using WebView.</li></ul></li><li><p><strong>Tech Stack:</strong></p><ul><li>Android Studio</li><li>Kotlin and XML</li><li>News API</li><li>Retrofit</li><li>Glide</li><li>RecyclerView</li><li>Firebase Realtime Database</li><li>WebView (Optional)</li></ul></li></ul> </div> </div> </div>\
        <div class="card my-4"> <div class="card-header collapsed" id="android6" data-toggle="collapse" data-target="#androidSix" aria-expanded="true" aria-controls="collapseAndroid6"> <div style="margin:0px; padding: 0px;" class="container"> <div style="margin:0px; padding: 0px;" class="row"> <div class="col-11"><h3 id="1newsroom">FitTrack</h3></div> <div class="col-1"><span class="chevron-icon"></span></div> </div> </div> </div> <div id="androidSix" class="collapse" aria-labelledby="android6" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li><strong>Description:</strong> A Workout Tracker App designed to help users log their workouts, set fitness goals, and track their progress over time. This app enables users to maintain a detailed history of exercises, including types, durations, and calories burned. Users can set and track weekly or monthly goals, stay motivated by viewing their achievements, and access their workout data across multiple devices with Firestore synchronization.</li> </ul> <ul> <li><p><strong>Features:</strong></p> <ul><li>Secure user accounts management using Firebase Authentication.</li><li>Display logged workouts in a RecyclerView, showing exercise type, duration, date, and calories burned.</li><li>A form to allow users to enter workout details, including exercise name, duration, date, and calories burned.</li><li>Users can set weekly/monthly goals and track their progress, with summaries to visualize accomplishments.</li><li>Store workout data locally with RoomDB, allowing offline access and tracking.</li><li>Sync workout data with Firebase Firestore to ensure logs are consistent across devices, enabling access from anywhere.</li></ul></li><li><p><strong>Tech Stack:</strong></p><ul><li>Android Studio</li><li>Kotlin and XML</li><li>Firebase Authentication</li><li>RoomDB</li><li>RecyclerView</li><li>Firebase Firestore</li></ul></li></ul> </div> </div> </div>\
       <div class="card my-4"> <div class="card-header collapsed" id="android9" data-toggle="collapse" data-target="#androidNine" aria-expanded="true" aria-controls="collapseAndroid9"> <div style="margin:0px; padding: 0px;" class="container"> <div style="margin:0px; padding: 0px;" class="row"> <div class="col-11"><h3 id="1newsroom">HackVerse</h3></div> <div class="col-1"><span class="chevron-icon"></span></div> </div> </div> </div> <div id="androidNine" class="collapse" aria-labelledby="android9" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li><strong>Description:</strong> A Hackathon manager app that allows users to sign up, upload hackathons, and invite friends to participate. Users can also register for hackathons hosted by their friends. The app provides a dashboard to view active hackathons, allows easy registration, and enables users to bookmark specific events for quick access.</li> </ul> <ul> <li><p><strong>Features:</strong></p> <ul> <li>Login & Sign up using Firebase Authentication.</li> <li>Dashboard showcasing the active hackathons.</li> <li>Comment and upvote feature for hackathons.</li> <li>Add new events and register in existing hackathons.</li> <li>Create a user profile for every user.</li> </ul> </li> <li><p><strong>Tech Stack:</strong></p> <ul> <li>Android Studio</li> <li>Kotlin, XML</li> <li>Firebase (Authentication, Realtime Database, Cloud Messaging & Cloud Storage)</li> <li>RecyclerView</li> <li>Glide</li> </ul> </li> </ul> </div> </div> </div>\
       <div class="card my-4"> <div class="card-header collapsed" id="android10" data-toggle="collapse" data-target="#androidTen" aria-expanded="true" aria-controls="collapseAndroid10"> <div style="margin:0px; padding: 0px;" class="container"> <div style="margin:0px; padding: 0px;" class="row"> <div class="col-11"><h3 id="1newsroom">ApplyWise</h3></div> <div class="col-1"><span class="chevron-icon"></span></div> </div> </div> </div> <div id="androidTen" class="collapse" aria-labelledby="android10" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li><strong>Description:</strong> The Job Application Tracker app is designed to streamline the job search process for job seekers, providing a central place to organize and monitor job applications. Users can track application details, including current stage, interview schedules, and reminders for follow-ups. With Firebase Authentication and RoomDB, the app ensures secure storage and offline access to application data. MPAndroidChart is integrated to visually display application progress through dynamic charts, providing an at-a-glance overview of progress and trends in the user\'s job search journey. Additionally, users can integrate their LinkedIn accounts to pull job information, simplifying the tracking of applications.</li> </ul> <ul> <li><p><strong>Features:</strong></p> <ul> <li>Use Firebase Authentication to store job application data securely.</li> <li>Organize applications by stages (Applied, Interview Scheduled, Offer Received, etc.) and display them in a RecyclerView.</li> <li>Use RoomDB to store job application data locally, ensuring data is accessible without an internet connection.</li> <li>Display application stages and trends through interactive charts, giving users a clear and comprehensive view of their job search progress at a glance.</li> <li>(Optional) Pull job information from LinkedIn for easy tracking or job syncing.</li> </ul> </li> <li><p><strong>Tech Stack:</strong></p> <ul> <li>Android Studio</li> <li>Kotlin and XML</li> <li>Firebase Authentication</li> <li>RoomDB (offline storage)</li> <li>Firebase Firestore</li> <li>RecyclerView</li> <li>MPAndroid Charts</li> <li>LinkedIn API, Retrofit (optional)</li> </ul> </li> </ul> </div> </div> </div>',
      img: "img/tracks-ad.png",
    },
    {
      id: "ml",
      title: "Machine Learning",
      body: '<div class="card my-4"> <div class="card-header collapsed" id="ml2" data-toggle="collapse" data-target="#mlTwo" aria-expanded="true" aria-controls="collapseMl2"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Build Your Own Machine Learning Algorithm Library</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div> <div id="mlTwo" class="collapse" aria-labelledby="ml2" data-parent="#accordion"> <div class="card-body pt-2"> <ul> <li><strong>Description:</strong> Develop a machine learning library by implementing the following algorithms from scratch: Linear Regression (and Polynomial Regression), Logistic Regression, K-Nearest Neighbors (KNN), K-Means Clustering, Decision Trees, and N-Layer Neural Network. Train the implemented algorithms on a provided training dataset and evaluate their performance on a hidden test dataset to validate your implementation. Prepare a detailed report documenting all methodologies, experiments, and decisions, including rejected approaches with justifications.</li> </ul> <ul> <li><p><strong>Implementation Details:</strong></p> <ul> <li>All algorithms must be implemented from scratch in Python.</li> <li>Use Jupyter Notebooks or Google Colaboratory for demonstrations.</li> <li>No Machine Learning libraries except NumPy, Pandas, and Matplotlib should be used.</li> <li>The report should contain the training logs, hyperparameters, and training visualizations.</li> </ul> </li> <li><p><strong>Tech Stack:</strong></p> <ul> <li>NumPy</li> <li>Pandas</li> <li>Matplotlib</li> </ul> </li> <li><p><strong>Report Requirements:</strong></p> <ul> <li>Training logs</li> <li>Hyperparameters</li> <li>Training visualizations</li> <li>Detailed account of experimentation, including methods attempted, implemented, and discarded, with reasoning.</li> </ul> </li> </ul> </div> </div> </div>',
      img: "img/tracks-ml.png",
    },
    {
      id: "gd",
      title: "UI UX Design",
      body: '<div style="width: 100%;" class="card my-3"><div style="width: 100%;" class="card-header collapsed" id="gd2" data-toggle="collapse" data-target="#gdTwo" aria-expanded="true" aria-controls="collapseGd2"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">UPI Payment App</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div style="width: 100%;" id="gdTwo" class="collapse" aria-labelledby="gd2" data-parent="#accordion"><div style="width: 100%;" class="card-body pt-2"><ul><li><strong>Description:</strong> Your task is to design an intuitive and user-friendly mobile app for UPI (Unified Payments Interface) payments that caters to both individual users and businesses. The app should simplify the process of making and receiving payments, tracking transaction history, and managing accounts.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>Secure and Easy Registration: Simple sign-up process with strong authentication measures to ensure user security.</li><li>Link Multiple Bank Accounts: Allow users to link and manage multiple bank accounts within the app.</li><li>QR Code Payments: Enable users to generate and scan QR codes for quick and easy payments.</li><li>Bill Payments and Recharges: Facility to pay utility bills and mobile recharges directly from the app.</li><li>Transaction History: Detailed logs of all transactions, with the ability to filter and search.</li><li>Request Money: Users can request money from others with a simple process.</li><li>Cashback and Rewards: Integration of cashback offers and reward points for transactions.</li><li>Customer Support: 24/7 in-app customer support for addressing user queries and issues.</li></ul></li><br><li><p><strong>Points to be taken care of:</strong></p><ul><li>User-Friendly Interface: Design an interface that is simple, intuitive, and easy to navigate for users of all ages.</li><li>Strong Security: Implement robust security features, including biometric authentication, OTP verification during initial setup.</li><li>Compliance with Standards: Make sure the app complies with all relevant standards i.e. usage of UPI and BHIM logos wherever necessary. Read : <a target="_blank" href="https://www.bhimupi.org.in/files/bhim/BHIM-UPI-Guidelines.pdf">UPI BHIM Guidelines</a></li></ul></li><br><li><strong>Example Projects:</strong><ul><li>Google Pay</li><li>PhonePe</li><li>Paytm</li><li>BHIM</li></ul></li><br><p>Prepare a PDF document showcasing your project, highlighting the user interface, key features, and the overall user experience of the UPI Payments App. Include wireframes, user flow diagrams, and any other relevant design elements to illustrate your solution.</p></ul></div></div></div> \
      <div style="width: 100%;" class="card my-3"><div style="width: 100%;" class="card-header collapsed" id="gd5" data-toggle="collapse" data-target="#gdFive" aria-expanded="true" aria-controls="collapseGd5"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Delivery App</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div style="width: 100%;" id="gdFive" class="collapse" aria-labelledby="gd5" data-parent="#accordion"><div style="width: 100%;" class="card-body pt-2"><ul><li><strong>Description:</strong> The task is to design an intuitive app for food, grocery, and package deliveries for individuals and businesses, focusing on ease of use and tracking efficiency. Create a seamless delivery app that streamlines ordering and delivery, enhancing engagement and navigation for users and partners.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>Secure Onboarding: Easy registration with OTP, biometric login.</li><li>Multi-Type Orders: Support for food, grocery, and packages.</li><li>Real-Time Tracking: Live status, delivery time estimates, and route maps.</li><li>Order Customization: Special instructions and modifications.</li><li>Payment Options: UPI, cards, digital wallets, and COD.</li><li>Order History: Comprehensive, searchable transaction logs.</li><li>Ratings & Reviews: Feedback for vendors and couriers.</li><li>Loyalty Programs: Rewards for regular users.</li><li>24/7 Support: In-app assistance.</li></ul></li><br><li><p><strong>Points to be taken care of:</strong></p><ul><li>Simple and intuitive navigation: Users should easily find what they need and complete tasks with minimal steps. Explore design inspiration from other grocery delivery apps.</li><li>Clear product information: Include high-quality images, detailed descriptions, and accurate pricing for each item.</li><li>Efficient search and filtering: Allow users to search by category, brand, dietary needs, etc. for a quick and personalized experience.</li><li>Seamless checkout process: Minimize steps and ensure secure payment options.</li></ul></li><li><strong>Example Projects:</strong><ul><li><a target="_blank" href="https://www.ubereats.com/">Uber Eats</a></li><li><a target="_blank" href="https://www.instacart.com/">Insta Cart</a></li><li><a target="_blank" href="https://www.postmates.com/">Postmates</a></li></ul></li><br><p>Craft a PDF presenting your delivery app design, focusing on UI, key features, and UX with wireframes, user flow diagrams, and other relevant visuals to illustrate your concept.</p></ul></div></div></div> \
        <div style="width: 100%;" class="card my-3"><div style="width: 100%;" class="card-header collapsed" id="gd3" data-toggle="collapse" data-target="#gdThree" aria-expanded="true" aria-controls="collapseGd3"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Medicine App</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div style="width: 100%;" id="gdThree" class="collapse" aria-labelledby="gd3" data-parent="#accordion"><div style="width: 100%;" class="card-body pt-2"><ul><li><strong>Description:</strong> Objective is to develop a mobile application for a medical store that simplifies the process of purchasing medications, managing prescriptions, and interacting with the store, while ensuring a secure, user-friendly, and compliant experience for both individual customers and businesses.</li></ul><ul><li><p><strong>Key Features:</strong></p><ul><li>Secure and Easy Registration: A simple sign-up process with strong authentication measures, including biometric authentication and OTP verification, to ensure user security.</li><li>Prescription Management: Allow users to upload, manage, Call and refill prescriptions directly through the app.</li><li>Medication Search and Purchase: Enable users to search, select, and purchase medications with ease, including the option to use QR codes for quick checkout.</li><li>Bill Payments and Insurance Integration: Facility to pay bills and integrate with insurance providers directly from the app.</li><li>Transaction History: Detailed logs of all transactions, with the ability to filter and search.</li><li>Request Medications: Users can request medications or refills with a simple process, including notifications for when the medication is ready for pickup.</li><li>Health Tips and Reminders: Integration of health tips, medication reminders, and alerts for prescription refills.</li><li>Customer Support: 24/7 in-app customer support for addressing user queries and issues.</li></ul></li><br><li><p><strong>Points to be Taken Care Of:</strong></p><ul><li>User-Friendly Interface: Design an interface that is simple, intuitive, and easy to navigate for users of all ages.</li><li>Compliance with Standards: Ensure the app complies with relevant healthcare and data protection standards, such as HIPAA, and includes necessary logos and compliance markers where required.</li></ul></li><li><strong>References:</strong><ul><li><a target="_blank" href="https://www.medplusmart.com/">MedPlus</a></li><li><a target="_blank" href="https://www.apollo247.com/">Apollo 247</a></li><li><a target="_blank" href="https://www.pharmeasy.in/">PharmEasy</a></li><li><a target="_blank" href="https://www.netmeds.com/">Netmeds</a></li></ul></li><br><p>Prepare a PDF document showcasing the project, highlighting User Interface, User Flow Diagrams, Key Features & Illustration of how the app complies with relevant standards and includes necessary compliance markers.</p></ul></div></div></div>\
        <div style="width: 100%;" class="card my-3"><div style="width: 100%;" class="card-header collapsed" id="gd4" data-toggle="collapse" data-target="#gdFour" aria-expanded="true" aria-controls="collapseGd4"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Vehicle Rental App</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div style="width: 100%;" id="gdFour" class="collapse" aria-labelledby="gd4" data-parent="#accordion"><div style="width: 100%;" class="card-body pt-2"><ul><li><strong>Description:</strong> Develop a mobile app for a vehicle rental company that prioritizes a seamless and efficient user experience for finding, booking, and managing vehicle rentals.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>Simplified Search and Filtering: Users should be able to easily find the perfect vehicle for their needs through intuitive search filters including car type, location, date, features (GPS, sunroof, etc.), and budget.</li><li>Transparent Pricing</li><li>Efficient Booking Process: Minimize the steps required to reserve a vehicle while ensuring all necessary information is collected securely.</li><li>Integrate functionalities like account management, rental history, in-app support, and push notifications for important updates.</li></ul></li><br><li><p><strong>Points to be taken care of:</strong></p><ul><li>Maintain a consistent visual style throughout the app using the same colors, fonts, and design elements across all screens.</li><li>The app\'s design should be user-friendly and visually appealing, with clear navigation, easy-to-understand controls, and consistent with modern design trends.</li><li>Implement a clear and easy-to-use navigation system that allows users to find the features they need effortlessly.</li></ul></li><li><strong>Example Projects:</strong><ul><li><a target="_blank" href="https://www.revv.co.in/">Revv - Car Rentals</a></li><li><a target="_blank" href="https://www.freedo.in/">Freedo - Bike Rentals</a></li><li><a target="_blank" href="https://joyrides.in/">Joyrides - Bike Rentals</a></li><li><a target="_blank" href="https://www.turo.com/">Turo - Car Rentals</a></li></ul></li><br><p>Present your project in the form of a PDF, highlighting the high-fidelity prototype showcasing the core functionalities and user flow and the overall user experience of the Vehicle Rental App.</p></ul></div></div></div>',
      img: "img/uiux.png",
    },
    {
      id: "hr",
      title: "Blockchain",
      body: '<div style="width: 90%; margin-left: 10px"><h3>Important Guidelines</h3><div><h4>Project Scope:</h4><p>Each project <strong>excludes the implementation of blockchain technology</strong>, as it will be covered separately in the club. The goal is to create an intuitive front-end website with <strong>added functionality</strong> using Firebase and Firebase Realtime Database.</p></div><div><h4>Firebase Tools to Use:</h4><ul><li><strong>Firebase Authentication:</strong> To handle user sign-up, login, and profile management. <a href="https://firebase.google.com/docs/auth" target="_blank">Firebase Authentication Docs</a></li><li><strong>Firebase Realtime Database:</strong> To store and sync data in real-time for dynamic features (e.g., user data, transactions, news articles). <a href="https://firebase.google.com/products/realtime-database" target="_blank">Firebase Realtime Database Docs</a></li></ul></div><div><h4>Support:</h4><p>For any doubts or questions, join the <strong>Blockchain Inductions Group</strong> on WhatsApp for assistance.</p><p><a href="https://chat.whatsapp.com/LqOIKF7VmnDCiyQCtd3vAu" target="_blank">Blockchain Inductions Group</a></p></div></div>\
      <div class="card my-4"><div class="card-header collapsed" id="hr2" data-toggle="collapse" data-target="#hrTwo" aria-expanded="true" aria-controls="collapseHr2"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">NFT MarketPlace</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="hrTwo" class="collapse" aria-labelledby="hr2" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Develop the front end of an NFT marketplace where users can buy and sell NFTs. The front end needs to show the NFTs available for sale, their price, and their details. Design a clean and user-friendly layout for showcasing NFTs and integrating transaction wallets.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>User Authentication: Implement a secure sign-in/sign-up system, allowing users to create accounts and manage their profiles securely (using Firebase).</li><li>NFT Listing: Enable users to upload and list their NFTs on the marketplace, including essential details such as a unique identifier, title, description, and associated media file (image etc.).</li><li>NFT Display: Present NFTs with comprehensive information, including details about the creator, edition, price, and any additional metadata the creator provides.</li><li>NFT Transaction: Facilitate a smooth buying and selling process for NFTs.</li></ul></li><br><li><p><strong>Extra Features:</strong></p><ul><li>NFT Minting: Allow users to upload and mint NFTs (using a database).</li><li>Integrate a decentralized wallet for authentication.</li></ul></li><br><li><p><strong>Tech-Stack:</strong></p><ul><li>HTML, CSS, JavaScript</li><li>Firebase for authentication</li></ul></li></ul></div></div></div>\
      <div class="card my-4"><div class="card-header collapsed" id="hr2" data-toggle="collapse" data-target="#hrTwo" aria-expanded="true" aria-controls="collapseHr2"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">NFT MarketPlace</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="hrTwo" class="collapse" aria-labelledby="hr2" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Develop the front end of an NFT marketplace where users can buy and sell NFTs. The front end needs to show the NFTs available for sale, their price, and their details. Design a clean and user-friendly layout for showcasing NFTs and integrating transaction wallets.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>User Authentication: Implement a secure sign-in/sign-up system, allowing users to create accounts and manage their profiles securely (using Firebase).</li><li>NFT Listing: Enable users to upload and list their NFTs on the marketplace, including essential details such as a unique identifier, title, description, and associated media file (image etc.).</li><li>NFT Display: Present NFTs with comprehensive information, including details about the creator, edition, price, and any additional metadata the creator provides.</li><li>NFT Transaction: Facilitate a smooth buying and selling process for NFTs.</li></ul></li><br><li><p><strong>Extra Features:</strong></p><ul><li>NFT Minting: Allow users to upload and mint NFTs (using a database).</li><li>Integrate a decentralized wallet for authentication.</li></ul></li><br><li><p><strong>Tech-Stack:</strong></p><ul><li>HTML, CSS, JavaScript</li><li>Firebase for authentication</li></ul></li></ul></div></div></div>\
       <div class="card my-4"><div class="card-header collapsed" id="hr4" data-toggle="collapse" data-target="#hrFour" aria-expanded="true" aria-controls="collapseHr4"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Escrow System for Freelancers</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="hrFour" class="collapse" aria-labelledby="hr4" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Create an online platform that connects freelancers with clients. The platform allows users to enlist new job openings and apply for already listed jobs.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>User Authentication: Implement a secure sign-in/sign-up system.</li><li>Job Listings: Design a responsive page displaying all active job listings with details such as topic name, description, and status.</li><li>Job Details: Design a page for each job listing, providing comprehensive information about the job, applicants, and real-time status updates.</li><li>Apply for Jobs: On applying, a new page displays job details with an interface for freelancers to apply.</li><li>Profile Page: Display details and projects that freelancers are working on.</li></ul></li><br><li><p><strong>Extra Features:</strong></p><ul><li>Search & Sort: Implement a feature allowing users to search and sort for specific job roles.</li><li>Wallet Integration: Integrate a decentralized wallet for authentication.</li></ul></li><br><li><p><strong>Tech-Stack:</strong></p><ul><li>HTML, CSS, JavaScript</li><li>Firebase for authentication</li></ul></li></ul></div></div></div>\
      <div class="card my-4"><div class="card-header collapsed" id="hr5" data-toggle="collapse" data-target="#hrFive" aria-expanded="true" aria-controls="collapseHr5"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">News Verification Platform</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="hrFive" class="collapse" aria-labelledby="hr5" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Develop a decentralized news authentication platform where users can post news articles (including images) with evidence and sources backing their claims. The platform should display a list of active news articles with details and an efficient mechanism for casting votes.</li></ul><ul><li><p><strong>Features:</strong></p><ul><li>User Authentication: Implement a secure sign-in/sign-up system for users to create accounts and manage profiles.</li><li>News Listings: Design a responsive page displaying recent news with details such as topic name, description, and number of verifications.</li><li>Sample News: Create at least 7 sample news articles showcasing various media with information like views, verifications, and FAKE tags.</li><li>Profile Page: Design a profile page showing all media content posted by a journalist, including data analytics using charts and graphs.</li></ul></li><br><li><p><strong>Extra Features:</strong></p><ul><li>Search & Sort: Implement a feature to allow users to sort and search for specific news genres.</li><li>Wallet Integration: Integrate a decentralized wallet for authentication.</li></ul></li><br><li><p><strong>Tech-Stack:</strong></p><ul><li>HTML, CSS, JavaScript</li><li>Firebase for authentication</li></ul></li></ul></div></div></div>\
      <div class="card my-4"><div class="card-header collapsed" id="hr6" data-toggle="collapse" data-target="#hrSix" aria-expanded="true" aria-controls="collapseHr6"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Crypto Tracker Dashboard</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="hrSix" class="collapse" aria-labelledby="hr6" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Create a user-centric frontend interface for a cryptocurrency tracker, providing an intuitive experience for users to view the price, market cap, circulating supply, max supply, etc. of a cryptocurrency. This design excludes the implementation of blockchain technology. You can take reference from the existing platforms.</li></ul><ul><li><p><strong>Basic Features:</strong></p><ul><li>User Authentication: Implement a secure sign-in/sign-up system, allowing users to create accounts and manage their profiles securely.</li><li>Cryptocurrency Listings: Design a responsive page displaying all major cryptocurrencies with relevant details such as name, description, supply, and price.</li><li>Dashboard: Design a dashboard page that displays information about popular cryptocurrencies.</li><li>Graphical Data: Add graphs and charts to display data trends.</li><li>Sample Crypto Pages: Create at least 7 sample crypto pages, where thorough data of a cryptocurrency will be listed.</li></ul></li></ul><ul><li><p><strong>Extra Features:</strong></p><ul><li>Wallet Integration: Integrate a decentralized wallet for authentication.</li><li>Watchlist: Create a watchlist where users can add cryptocurrencies they want to monitor.</li><li>API Integration: Integrate an API to fetch data like TVL, price, max supply, etc.</li></ul></li></ul><ul><li><p><strong>Tech-Stack:</strong></p><ul><li>HTML, CSS, JavaScript</li><li>Firebase for authentication</li></ul></li></ul></div></div></div>\
      <div class="card my-4"><div class="card-header collapsed" id="hr7" data-toggle="collapse" data-target="#hrSeven" aria-expanded="true" aria-controls="collapseHr7"><div style="margin:0px; padding: 0px;" class="container"><div style="margin:0px; padding: 0px;" class="row"><div class="col-11"><h3 id="1newsroom">Crypto Currency Wallet-Frontend Design</h3></div><div class="col-1"><span class="chevron-icon"></span></div></div></div></div><div id="hrSeven" class="collapse" aria-labelledby="hr7" data-parent="#accordion"><div class="card-body pt-2"><ul><li><strong>Description:</strong> Create a user-centric frontend interface for a cryptocurrency wallet, emphasizing an intuitive and secure experience for users to view balances, perform transactions and view transaction history. You can take reference from the existing platforms.</li></ul><ul><li><p><strong>Basic Features:</strong></p><ul><li>User Authentication: Develop a secure sign-in/sign-up system using Firebase for user account creation and profile management.</li><li>Balance Viewing: Enable users to view their total balance in the primary currency, along with a breakdown of various cryptocurrencies and their respective balances.</li><li>Transaction History: Display a chronological list of recent transactions with details like date, type, amount, currency, and status.</li><li>Transaction Functionality: Allow users to perform transactions, including sending and receiving cryptocurrencies.</li></ul></li><ul><li><p><strong>Extra Features:</strong></p><ul><li>Support/FAQ Section: Include a section for user assistance, offering support and frequently asked questions.</li><li>Graphical Representation: Implement a graphical representation (graph or chart) showcasing portfolio value over time.</li><li>Price Ticker: Include a real-time price ticker for selected cryptocurrencies.</li></ul></li></ul><ul><li><p><strong>Tech-Stack:</strong></p><ul><li>HTML, CSS, Javascript</li><li>Firebase for authentication</li></ul></li></ul></div></div></div>',
      img: "img/tracks-blockchain.png",
    },
  ];

  function getNextTrackIndex(currentTrackId) {
    var currentIndex = tracks
      .map(function (track) {
        return track.id;
      })
      .indexOf(currentTrackId);

    return currentIndex === tracks.length - 1 ? 0 : currentIndex + 1;
  }

  function setTrackData(track) {
    var modal = $("#trackModal");
    modal.find(".modal-title").text(track.title);
    modal.find(".modal-body .modal-inner").html(track.body);
    modal.find(".track-img").css("background", 'url("' + track.img + '")');
    modal.data("id", track.id);
  }

  $("#trackModal").on("show.bs.modal", function (event) {
    var button = $(event.relatedTarget); // Button that triggered the modal
    var selectedTrackId = button.data("track"); // Extract info from data-* attributes

    var selectedTrack = tracks.filter(function (track) {
      return track.id === selectedTrackId;
    })[0];

    setTrackData(selectedTrack);
  });

  $("#nextTrack").on("click", function () {
    var currentTrackId = $("#trackModal").data("id");

    setTrackData(tracks[getNextTrackIndex(currentTrackId)]);
  });
})(jQuery); // End of use strict
